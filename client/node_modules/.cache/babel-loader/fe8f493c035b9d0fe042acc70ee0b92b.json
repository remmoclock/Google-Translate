{"ast":null,"code":"var _jsxFileName = \"/Users/remmo/Desktop/Dev/Google translate/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport TextBox from \"./Components/TextBox\";\nimport Arrows from \"./Components/Arrows\";\nimport Modal from \"./Components/Modal\";\nimport Button from \"./Components/Button\";\nimport axios from \"axios\";\nimport Loader from \"./Components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Hooks\n  const [showModal, setShowModal] = useState();\n  const [inputLanguage, setInputLanguage] = useState(\"French\");\n  const [outputLanguage, setOutputLanguage] = useState(\"English\");\n  const [languages, setLanguages] = useState();\n  const [textToTranslate, setTextToTranslate] = useState();\n  const [translatedText, setTranslatedText] = useState();\n  const [loader, setLoader] = useState(false);\n  console.log(process.env); //Api\n  // const getLanguages = () => {\n  //   const options = {\n  //     method: \"GET\",\n  //     url: \"https://google-translate20.p.rapidapi.com/languages\",\n  //     headers: {\n  //       \"X-RapidAPI-Host\": \"google-translate20.p.rapidapi.com\",\n  //       \"X-RapidAPI-Key\": \"dff427a5b5mshdc656cb0e3fd1fap1a6b02jsn260cef193e33\",\n  //     },\n  //   };\n  //   axios\n  //     .request(options)\n  //     .then(function (response) {\n  //       console.log(response.data);\n  //       const arrayOfData = Object.keys(response.data.data).map(\n  //         (key) => response.data.data[key]\n  //       );\n  //       console.log(\"arrayOfData\", arrayOfData);\n  //       setLanguages(arrayOfData);\n  //     })\n  //     .catch(function (error) {\n  //       console.error(error);\n  //     });\n  // };\n  // Backend call\n\n  const getLanguages = async () => {\n    const response = await axios(\"http://localhost:8000/languages\");\n    setLanguages(response.data);\n  };\n\n  useEffect(() => {\n    getLanguages();\n  }, []); // const translate = () => {\n  //   const options = {\n  //     method: \"GET\",\n  //     url: \"https://google-translate20.p.rapidapi.com/translate\",\n  //     params: {\n  //       text: textToTranslate,\n  //       tl: outputLanguage,\n  //       sl: inputLanguage,\n  //     },\n  //     headers: {\n  //       \"X-RapidAPI-Host\": \"google-translate20.p.rapidapi.com\",\n  //       \"X-RapidAPI-Key\": \"dff427a5b5mshdc656cb0e3fd1fap1a6b02jsn260cef193e33\",\n  //     },\n  //   };\n  //   axios\n  //     .request(options)\n  //     .then(function (response) {\n  //       console.log(response.data);\n  //       setTranslatedText(response.data.data.translation);\n  //     })\n  //     .catch(function (error) {\n  //       console.error(error);\n  //     });\n  // };\n  // console.log(\"translate\", translatedText);\n  // Backend call \n\n  const translate = async () => {\n    console.log('translate');\n    setLoader(true);\n    const data = {\n      textToTranslate,\n      outputLanguage,\n      inputLanguage\n    };\n    const response = await axios.get('http://localhost:8000/translation', {\n      params: data\n    });\n    console.log('response', response);\n    setTranslatedText(response.data);\n    setLoader(false);\n  }; // Func\n\n\n  const handleClick = () => {\n    setInputLanguage(outputLanguage);\n    setOutputLanguage(inputLanguage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!showModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        style: \"input\",\n        selectedLanguage: inputLanguage,\n        setShowModal: setShowModal,\n        setTextToTranslate: setTextToTranslate,\n        textToTranslate: textToTranslate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow-container\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Arrows, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        style: \"output\",\n        selectedLanguage: outputLanguage,\n        setShowModal: setShowModal,\n        translatedText: translatedText,\n        setTranslatedText: setTranslatedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        onClick: translate,\n        children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      setShowModal: setShowModal,\n      languages: languages,\n      chosenLanguage: showModal === \"input\" ? inputLanguage : outputLanguage,\n      setChosenLanguage: showModal === \"input\" ? setInputLanguage : setOutputLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1Wa2+bD99tkY8aYnf/JG5mz3PLY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TextBox","Arrows","Modal","Button","axios","Loader","App","showModal","setShowModal","inputLanguage","setInputLanguage","outputLanguage","setOutputLanguage","languages","setLanguages","textToTranslate","setTextToTranslate","translatedText","setTranslatedText","loader","setLoader","console","log","process","env","getLanguages","response","data","translate","get","params","handleClick"],"sources":["/Users/remmo/Desktop/Dev/Google translate/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport TextBox from \"./Components/TextBox\";\nimport Arrows from \"./Components/Arrows\";\nimport Modal from \"./Components/Modal\";\nimport Button from \"./Components/Button\";\nimport axios from \"axios\";\nimport Loader from \"./Components/Loader\";\n\nfunction App() {\n  //Hooks\n  const [showModal, setShowModal] = useState();\n  const [inputLanguage, setInputLanguage] = useState(\"French\");\n  const [outputLanguage, setOutputLanguage] = useState(\"English\");\n  const [languages, setLanguages] = useState();\n  const [textToTranslate, setTextToTranslate] = useState();\n  const [translatedText, setTranslatedText] = useState();\n  const [loader, setLoader] = useState(false);\n\n  console.log(process.env);\n\n  //Api\n  // const getLanguages = () => {\n  //   const options = {\n  //     method: \"GET\",\n  //     url: \"https://google-translate20.p.rapidapi.com/languages\",\n  //     headers: {\n  //       \"X-RapidAPI-Host\": \"google-translate20.p.rapidapi.com\",\n  //       \"X-RapidAPI-Key\": \"dff427a5b5mshdc656cb0e3fd1fap1a6b02jsn260cef193e33\",\n  //     },\n  //   };\n\n  //   axios\n  //     .request(options)\n  //     .then(function (response) {\n  //       console.log(response.data);\n  //       const arrayOfData = Object.keys(response.data.data).map(\n  //         (key) => response.data.data[key]\n  //       );\n  //       console.log(\"arrayOfData\", arrayOfData);\n  //       setLanguages(arrayOfData);\n  //     })\n  //     .catch(function (error) {\n  //       console.error(error);\n  //     });\n  // };\n\n  // Backend call\n\n  const getLanguages = async () => {\n    const response = await axios(\"http://localhost:8000/languages\");\n    setLanguages(response.data);\n  };\n\n  useEffect(() => {\n    getLanguages();\n  }, []);\n\n  // const translate = () => {\n  //   const options = {\n  //     method: \"GET\",\n  //     url: \"https://google-translate20.p.rapidapi.com/translate\",\n  //     params: {\n  //       text: textToTranslate,\n  //       tl: outputLanguage,\n  //       sl: inputLanguage,\n  //     },\n  //     headers: {\n  //       \"X-RapidAPI-Host\": \"google-translate20.p.rapidapi.com\",\n  //       \"X-RapidAPI-Key\": \"dff427a5b5mshdc656cb0e3fd1fap1a6b02jsn260cef193e33\",\n  //     },\n  //   };\n\n  //   axios\n  //     .request(options)\n  //     .then(function (response) {\n  //       console.log(response.data);\n  //       setTranslatedText(response.data.data.translation);\n  //     })\n  //     .catch(function (error) {\n  //       console.error(error);\n  //     });\n  // };\n  // console.log(\"translate\", translatedText);\n\n// Backend call \n\nconst translate = async () => {\n  console.log('translate')\n  setLoader(true)\n  const data = {\n    textToTranslate, outputLanguage, inputLanguage\n  }\n  const response = await axios.get('http://localhost:8000/translation', {\n    params : data\n  })\n  console.log('response', response)\n  setTranslatedText(response.data)\n  setLoader(false)\n}\n\n  // Func\n  const handleClick = () => {\n    setInputLanguage(outputLanguage);\n    setOutputLanguage(inputLanguage);\n  };\n  return (\n    <div className=\"app\">\n      {!showModal && (\n        <>\n        <Loader />\n          <TextBox\n            style=\"input\"\n            selectedLanguage={inputLanguage}\n            setShowModal={setShowModal}\n            setTextToTranslate={setTextToTranslate}\n            textToTranslate={textToTranslate}\n          />\n          <div className=\"arrow-container\" onClick={handleClick}>\n            <Arrows />\n          </div>\n          <TextBox\n            style=\"output\"\n            selectedLanguage={outputLanguage}\n            setShowModal={setShowModal}\n            translatedText={translatedText}\n            setTranslatedText={setTranslatedText}\n          />\n          <div className=\"button-container\" onClick={translate}>\n            <Button />\n          </div>\n        </>\n      )}\n      {showModal && (\n        <Modal\n          setShowModal={setShowModal}\n          languages={languages}\n          chosenLanguage={\n            showModal === \"input\" ? inputLanguage : outputLanguage\n          }\n          setChosenLanguage={\n            showModal === \"input\" ? setInputLanguage : setOutputLanguage\n          }\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}